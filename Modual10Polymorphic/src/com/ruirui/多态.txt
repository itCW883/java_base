多态(polymorphic):
    多态的前提:
    1:必须有子父类继承,或者接口的实现关系
    2:必须有方法的重写(多态调成员,必须调重写的方法,没有重写多态没有意义)
    3:new 对象和普通类new对象不同:父类引用指向子类对象[Fu fu = new Zi](可以理解为:大类型接受了一个小类型数据)
注意:多态前提下不能直接调用子类功能


多态前提下成员的访问特点:
                    1:成员看左边
                    2:方法看右边


多态对比原始方式new的优缺点:
                原始方式
                        优点:
                            原始方式:既能调用重写的方法,还能调用父类非私有的方法,还能调用自生特有方法
                        缺点:
                            扩展性查
                多态方式:
                        优点:
                            扩展性强
                        缺点:
                            不能调用子类特有功能


多态中的转型(解决多态不能使用子类特有方法问题)
        向上转型:父类引用子类对象(Fu fu = new Zi)
        向下转型:强转:大类型强制转为小类型[Zi 转换后的对象名 = (Zi) fu]
                向下转型后就可以调用子类特有功能
           转型中可能出现的问题(类型转换异常)
