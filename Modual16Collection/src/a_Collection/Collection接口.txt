Collection(接口):是一个单例集合的顶级接口
                想要使用只能new实现类对象 Collection<泛型> 对象名 = new ArrayList()/LinkedList()/Vector()[实现类]
                泛型决定集合中元素的类型
    集合:
        1.集合只能存储引用数据类型的数据(若传入基本数据类型会被自动装箱)
        2.集合长度可变
        3.方法巨多

集合的分类:
    1:单列计划:一个元素就一个组成部分
        所有单列集合都有一个顶级接口Collection;
        Collection下有两个子接口:
                1:List接口
                  实现类:
                    ①ArrayList:
                        特点:
                            1,元素有序
                            2,元素可重复
                            3,带索引
                            4,线程不安全
                            5,底层为数组
                    ②LinkedList:
                        特点:
                           1,元素有序
                           2,元素可重复
                           3,带索引(本质无索引,但是java为它提供了很多根据索引操作元素的方法)
                           4,线程不安全
                           5,底层为双向链表
                    ③Vector(很少使用)
                        特点:
                           1,元素有序
                           2,元素可重复
                           3,带索引
                           4,线程安全(效率低)
                           5,底层为数组
                2:Set(底层实现全部依靠Map)
                实现类:
                   ①HashSet:
                       特点:
                           1,元素无序
                           2,元素唯一,出现元素相同情况,会覆盖其中一个
                           3,无索引
                           4,线程不安全
                           5,底层为Hash表结构
                   ②LinkedHashSet(继承了HashSet):
                       特点:
                          1,元素有序
                          2,元素唯一,出现元素相同情况,会覆盖其中一个
                          3,无索引
                          4,线程不安全
                          5,底层为Hash表加双向链表结构
                   ③TreeSet
                       特点:
                          1,可对元素进行排序
                          2,元素唯一
                          3,无索引
                          4,线程不安全
                          5,底层为红黑树
    2:双列集合:一个元素由两部分组成(key : value[键值对])
