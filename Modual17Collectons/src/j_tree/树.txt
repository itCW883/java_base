树:
    平衡树:二叉树的左孩子和有孩子相等
    不平衡树:左孩子和右孩子的节点树不相等
    排序树/查找树:左右子树是由大小排序的以根节点未为分隔;左子树均小于根节点;右子树均大于根节点
    红黑树:趋近于平衡树
        根节点为黑色
        每个叶子节点是黑的
        如果某一个节点是红色的;它的子节点必须是黑的
        对每一个节点从该节点到其后代的叶子节点的的简单路劲上均包含相同数目的黑节点
集合加入红黑树的目的:提高查询效率
HashSet集合:数据结构为哈希表:
        jdk8以前:哈希表=数组加链表
        jdk8以后:哈希表=数组+链表+红黑树  -->为了查询效率