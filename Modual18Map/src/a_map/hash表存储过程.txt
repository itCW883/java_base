Hash表存储过程:
    细节:1:hash表中的数组默认长度为16;但是要在第一次put添加元素的时候才会进行初始化
        2:hash表中有一个加载因子;默认0.75;含义是:数组存储达到百分之75的是侯扩容;
         是存储性能2的一种体现
         一次扩容2倍
        3:如果链表长度=8;并且数组容量>=64时链表会自动转为红黑树
          如果删除元素;元素个数<=6时,红黑树会自动转为链表

       注意:特殊的一些变量
          default_initial_capacity:HASmAP默认容量16
          default_load_factor:HashMAap默认加载因子:0.75F
          threshold:扩容的临界值   等于 容量*0.7 =12 第一次扩容
          treeify_threshold:链表长度默认值; 转为红黑树长度为:8
          min_treeify_capacity:链表被树化时最小的数组容量:64
    注意:hashmap是可以指定长度和加载因子的:传入的容量实际上会被转为最接近的那个2次幂的值


1:(map和set)hash表中有数组;存在无索引的原因:
            因为存数据时可能会在同一个索引下形成链表
2:为什么hashmap和hashset是无序的;LinkedHashSet是有序的:
            原因是HashMap底层的链表为单向链
    LinkedHashSet有序的原因是:遍历是从第一个存储元素的节点开始遍历
        在hash表的基础上加入了双向链表所以有序(双向链表前后元素可以相互查找)