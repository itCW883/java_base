通信三要素:IP地址;协议;端口号
网络编程:
    概述:在网络通信协议下在不同计算机上运行的程序;程序间会进行数据传输
    只要是计算机之间通过网络进行数据传输就需要网络编程的存在

java主要针对B/S架构
网络架构:
    C/S:
        客户端/服务端架构:
            特点:需要安装客户端软件
            优点:不需要把所有数据放于服务端;服务端压力相对较小
            缺点:维护相比于B/S不方便

    B/S:
        浏览器/服务器架构:
            特点:无需安装客户端软件,可以直接在浏览器中打开
            优点:维护便利
            缺点:数据压力大

服务器:安装了服务器软件的计算机才能称为服务器
    (服务器软件: TomCat ;开发好的应用需要部署到服务器软件上)


通信三要素:IP地址;协议;端口号
         IP地址:计算机间的唯一标识(通过IP地址将两台计算机连接)
         特殊网址 127.0.0.1代表本机地址
            localhost(主机名,写的是服务器的ip)也代表本机:端口号/项目应用名称/资源[就可以访问到服务端的资源]

         协议:
            分为TCP(面向连接)与UDP(面向无连接)

            TCP(面向连接):需要双方确认连接才能进行数据交互
                优点:数据安全;能给数据提供一个安全的传输环境
                缺点:效率低

                三次握手:(在连接前的反复确认;只有三次握手均通过才能进行数据交互)
                    1:第一次握手:客户端向服务端发出请求等待确认
                    2:第二次握手:服务端向客户端回送响应;通知收到客户端收到了连接请求
                    3:第三次握手:客户端再次向服务端发送确认消息;确认连接

                四次挥手(断开连接):
                    1:第一次挥手:客户端向服务端提出结束连接;让服务端做好最后准备工作,此时;客户端处于关闭状态;即表示不再向服务端发送数据;
                                但是还可以接受数据
                    2:第二次挥手:服务端向接收到客户端结束连接的请求;会将最后的数据发送给客户端;并告知上层应用进程不再接收数据
                    3:第三次挥手:服务端发送完整数据后;会向客户端发送一个释放连接请求;客户端接收后就知道可以正式断开连接了
                    4:第四次挥手:客户端收到服务器最后的释放连接请求后,要回复一个彻底断开的报文;这样服务器收到后才会彻底释放连接,
                                这里客户端发送完最后的报文后,会等待2MSL,因为有可能服务器`没有收到最后的报文,若服务器迟迟没有收到,
                                服务端就会再次向客户端发送释放连接报文;并重新进行计时,若等待2MSL后仍未收到;就会彻底断开




            UDP:客户端访问服务端;不需要双方确认后才进行连接通信(典型案例:视频通话)
                优点:效率高
                缺点:传输数据不安全;容易丢包(丢失数据包)


        端口号:
            每一个应用程序的唯一标识
            用两个字节表示的整数,其取值范围是0--65535,其中,0--1023之间的端口号用于一些知名的网络服务和应用,普通应用程序需要使用1024以后的端口号;
            若端口号被另一台服务器占用,会导致当前程序启动失败