默认方法和静态方法的作用:
        可以作为一个零时添加的小功能使用(不要在定义抽象类,以免打破类之间的联系,抽象方法需要在实现类中全实现)

接口成员变量:
        public static final 数据类型 = 变量值(public static final在接口中不写也默认存在)
        final代表最终的:被final修饰的变量不可以二次赋值;可以视为常量
        使用:接口名.成员变量名(直接调用)


接口的特点:
        实现类的命名以Impl结尾(行业规范)
        1:接口可以多继承:一个接口可以继承多个接口(public interface interface1 extends interface2,interface3)
        2:接口可以多实现:一个实现类实现一个或多个接口(public class IterfaceImpl implements interface2,interface3)
        3:一个子类可以继承一个父类的同时实现一个或多个接口(public class Zi extends Fu interface2,interface3)
        4:无论继承还是实现接口,都需要重写父类或接口的所有抽象方法
        5:一个类实现多个接口时,接口中的抽象方法出现重名且参数一样时:只需要重写一次(只需要否则会报错原因:一个类不可以有重写且参数列表相同的方法)
        6:一个类实现多个接口时,多个接口中的默认方法出现重名且参数一样时:必需重写一次


接口和抽象类对比
        相同:
            1:都位于继承体系的顶端(最开始的那个父类),用于被其他类实现或继承
            2:都不能new对象
            3:都包含抽象方法;其子类或者实现类都必须重写这些抽象方法
        不同:
            1:抽象类一般作为父类使用,可以有:成员变量,成员方法,构造方法等,抽象方法(什么都可以有)
              接口成员单一:一般只有抽象方法和成员变量(接口一般抽取的都是方法,作为功能的大集合)
            2:类不能多继承
              接口可以多继承
              